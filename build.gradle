plugins {
    id "java-library"
    id "io.qameta.allure" version "2.11.2"
    id "io.freefair.lombok" version "6.0.0-m2"
}

group "com.kyattonippu"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

def allureVersion = "2.23.0",
    selenideVersion = "6.19.1",
    junitVersion = "5.9.3",
    slf4jVersion = "2.0.7",
    restAssuredVersion = "5.4.0",
    assertjCoreVersion = "3.24.2",
    webDriverManagerVersion = "5.6.3",
    jschVersion = "0.1.55",
    ownerVersion = "1.0.12"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.assertj:assertj-core:$assertjCoreVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.github.bonigarcia:webdrivermanager:$webDriverManagerVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "com.jcraft:jsch:$jschVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.awaitility:awaitility:4.2.0"
    )

    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task demoqa_test(type: Test) {
    useJUnitPlatform {
        includeTags("API")
    }
}